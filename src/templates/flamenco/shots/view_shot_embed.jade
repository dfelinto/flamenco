.flamenco-box.shot.with-status(class="status-{{ shot.properties.status }}")
	form#shot_form(onsubmit="return shot_save('{{shot._id}}', '{{ url_for('flamenco.shots.perproject.save', project_url=project['url'], shot_id=shot._id) }}')")
		input(type='hidden',name='_etag',value='{{ shot._etag }}')
		.input-group
			span.item-name(title="Shot names can only be updated from Blender.") {{ shot.name | hide_none }}
			button.copy-to-clipboard.btn.item-id(
				style="margin-left: auto",
				name="Copy to Clipboard",
				type="button",
				data-clipboard-text="{{ shot._id }}",
				title="Copy ID to clipboard")
				| ID

		| {% if 'PUT' in shot.allowed_methods %}
		.input-group
			textarea#item-description.input-transparent(
				name="description",
				type="text",
				rows=1,
				placeholder='Description') {{ shot.description | hide_none }}

		.input-group
			label(for="item-status") Status:
			select#item-status.input-transparent(
				name="status")
				| {% for status in shot_node_type.dyn_schema.status.allowed %}
				| <option value="{{ status }}" {% if status == shot.properties.status %}selected{% endif %}>{{ status | undertitle }}</option>
				| {% endfor %}

		.input-group
			textarea#item-notes.input-transparent(
				name="notes",
				type="text",
				rows=1,
				placeholder='Notes') {{ shot.properties.notes | hide_none }}

		.input-group-separator

		.input-group

			button#item-save.btn.btn-default.btn-block(type='submit')
				i.pi-check
				| Save Shot
		| {% else %}
		//- NOTE: read-only versions of the fields above.
		| {% if shot.description %}
		p.item-description {{ shot.description | hide_none }}
		| {% endif %}

		.table.item-properties
			.table-body
				.table-row.properties-status.js-help(
					data-url="{{ url_for('flamenco.help', project_url=project.url) }}")
					.table-cell Status
					.table-cell(class="status-{{ shot.properties.status }}")
						| {{ shot.properties.status | undertitle }}
				| {% if shot.properties.notes %}
				.table-row
					.table-cell Notes
					.table-cell
						| {{ shot.properties.notes | hide_none }}
				| {% endif %}
		| {% endif %}

.flamenco-box
	.table.item-properties
		.table-body
			.table-row
				.table-cell Last Update
				.table-cell(title="{{ shot._updated }}")
					span(role='button',
						data-toggle='collapse',
						data-target='#task-time-creation',
						aria-expanded='false',
						aria-controls='#task-time-creation')
						| {{ shot._updated | pretty_date_time }}
					#task-time-creation.collapse
						| Created on {{ shot._created | pretty_date_time }}

			.table-row
				.table-cell Used in Edit
				.table-cell.text-capitalize(title="Whether this shot is used in the edit.")
					| {{ shot.properties.used_in_edit | yesno('yes,no,yes') }}
			.table-row
				.table-cell Cut-in
				.table-cell(title="Frame number of the first visible frame of this shot.")
					| at frame {{ shot.properties.cut_in_timeline_in_frames }}
			.table-row
				.table-cell Trim Start
				.table-cell(title="How many frames were trimmed off the start of the shot in the edit.")
					| {{ shot.properties.trim_start_in_frames }} frames
			.table-row
				.table-cell Duration in Edit
				.table-cell(title="Duration of the visible part of this shot.")
					| {{ shot.properties.duration_in_edit_in_frames }} frames

#item-view-feed
	#activities
	#comments-embed

	| {% if config.DEBUG %}
	.debug-info
		a.debug-info-toggle(role='button',
			data-toggle='collapse',
			href='#debug-content',
			aria-expanded='false',
			aria-controls='debug-content')
			i.pi-info
			| Debug Info
		#debug-content.collapse
			pre.
				{{ shot.to_dict() | pprint }}
		| {% endif %}

script.
	var clipboard = new Clipboard('.copy-to-clipboard');

	clipboard.on('success', function(e) {
		statusBarSet('info', 'Copied shot ID to clipboard', 'pi-check');
	});

	var activities_url = "{{ url_for('.activities', project_url=project.url, shot_id=shot['_id']) }}";
	loadActivities(activities_url);  // from 10_tasks.js
	loadComments("{{ url_for('nodes.comments_for_node', node_id=shot['_id']) }}");

	$('body').on('pillar:comment-posted', function(e, comment_node_id) {
		loadActivities(activities_url)
		.done(function() {
			$('#' + comment_node_id).scrollHere();
		});
	});

	$('.js-help').openModalUrl('Help', "{{ url_for('flamenco.help', project_url=project.url) }}");

	{% if 'PUT' in shot.allowed_methods %}
		/* Resize textareas */
		var textAreaFields = $('#item-description, #item-notes');

		textAreaFields.each(function(){
			$(this)
				.autoResize()
				.blur();
		});

		$('#item-status').change(function(){
			$("#item-save").trigger( "click" );
		});
	{% endif %}
